{"version":3,"file":"static/js/643.488dbcd4.chunk.js","mappings":"kNAEaA,EAAcC,EAAAA,GAAAA,IAAH,0PAeXC,EAAWD,EAAAA,GAAAA,GAAH,uR,UCfRE,EAAUF,EAAAA,GAAAA,IAAH,8KAWPG,EAAUH,EAAAA,GAAAA,IAAH,uRAmBPI,EAAQJ,EAAAA,GAAAA,EAAH,wF,SCXlB,MAbA,YAAqD,IAArCK,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,aAC5B,OAAO,SAACJ,EAAD,CAASK,QAAS,kBAAMF,GAAa,IAArC,UACL,UAACF,EAAD,CAASI,QAAS,SAACC,GAAD,OAAOA,EAAEC,mBAA3B,WACE,gBAAKC,IAAKJ,EAAa,YAAY,GAAGK,MAAOC,IAAI,UACjD,wBAAKN,EAAa,WAAWK,SAC7B,0CAAkBL,EAAa,kBAAkBO,WAAWF,UAC5D,sCAAcL,EAAa,aAAaK,UACxC,uBAAIL,EAAaQ,QAAQH,SACzB,SAACP,EAAD,UAAQE,EAAaS,OAAOJ,cCgDlC,MAzDA,WACE,IAAMK,GAAWC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAgBA,KAAvCF,OACR,GAAwBG,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBrB,EAAlB,KACA,GAAwCgB,EAAAA,EAAAA,UAAS,IAAjD,eAAOf,EAAP,KAAqBqB,EAArB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACRZ,GAASa,EAAAA,EAAAA,SACR,KAEHD,EAAAA,EAAAA,YAAU,WACRL,EAAQL,EAAOY,YACd,QAACZ,QAAD,IAACA,OAAD,EAACA,EAAQa,UAQV,UAAChC,EAAD,YACE,oCACA,kBACEiC,KAAK,OACLC,KAAK,SACLC,YAAY,iBACZC,SAAU,SAAC3B,GAAD,OACRiB,EAAc,GAAD,OACRjB,EAAE4B,OAAOC,MACTC,OAAO,GACPC,eAHQ,OAGQ/B,EAAE4B,OAAOC,MAAMG,UAAU,SAIlD,SAACvC,EAAD,iBACGqB,QADH,IACGA,OADH,EACGA,EACGmB,QAAO,SAACJ,GAAD,OACPA,EAAM,WAAW1B,MAAM+B,WAAWlB,MAEnCmB,KAAI,SAACC,GACJ,OACE,gBAAIrC,QAAS,kBA3BJsC,EA2BsBD,EA1BzCvC,GAAa,QACbsB,EAAgBkB,GAFE,IAACA,GA2BT,WACE,gBAAKnC,IAAKkC,EAAK,YAAY,GAAGjC,MAAOC,IAAI,UACzC,0BAAOgC,EAAK,WAAWjC,UAFkBiC,EAAK,WAAWjC,YAOlEe,IACC,SAAC,EAAD,CAAOpB,aAAcA,EAAcD,aAAcA","sources":["containers/Home/styled.ts","containers/Movie/styled.ts","containers/Movie/index.tsx","containers/Home/index.tsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const MainWrapper = styled.div`  \r\n  position: relative;\r\n  width: 100%;\r\n  background-color: #ffedcc;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n\r\n  > input {\r\n    width: 300px;\r\n    border-radius: 3px;\r\n  }\r\n`;\r\n\r\nexport const StyledUl = styled.ul`\r\nwidth: fit-content;\r\nmargin: auto;\r\nmargin: 20px 0;\r\n\r\n  li {\r\n    list-style-type: none;\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 10px;\r\n    width: fit-content;\r\n    cursor: pointer;\r\n\r\n    img {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  z-index: 1;\r\n  position: fixed;\r\n  top: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  width: 70%;\r\n  height: 70%;\r\n  min-height: 605px;\r\n  min-width: 785px;\r\n  padding: 0 20px;\r\n  background-color: orange;\r\n  border-radius: 6px;\r\n\r\n  > img {\r\n    display: block;\r\n    margin: 20px auto;\r\n  }\r\n\r\n  > h3, h5 {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Small = styled.p`\r\n  font-size: 12px;\r\n  text-align: center;\r\n  margin-top: 36px;\r\n`;\r\n","import React from 'react';\r\nimport { Wrapper, Content, Small } from './styled';\r\n\r\ninterface IMovie {\r\n  movieDetails: any;\r\n  setShowModal: (isOtherUserBlock: boolean) => void;\r\n}\r\n\r\nfunction Movie({setShowModal, movieDetails}:IMovie) {  \r\n  return <Wrapper onClick={() => setShowModal(false)}>\r\n    <Content onClick={(e) => e.stopPropagation()}>\r\n      <img src={movieDetails['im:image'][2].label} alt=\"logo\" />\r\n      <h3>{movieDetails['im:name'].label}</h3>\r\n      <h5>Release date {movieDetails['im:releaseDate'].attributes.label}</h5>\r\n      <h5>Director {movieDetails['im:artist'].label}</h5>\r\n      <p>{movieDetails.summary.label}</p>\r\n      <Small>{movieDetails.rights.label}</Small>\r\n    </Content>\r\n  </Wrapper>;\r\n}\r\n\r\nexport default Movie;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MainWrapper, StyledUl } from \"./styled\";\r\nimport { attemptToGetMovies } from \"../../store/actions/movies\";\r\nimport Movie from \"../Movie\";\r\n\r\nfunction Sidebar(): JSX.Element {\r\n  const dispatch = useDispatch();\r\n  const { movies } = useSelector((state: any) => state);\r\n  const [list, setList] = useState(null);\r\n  const [filterText, setFilterText] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [movieDetails, setMovieDetails] = useState({});\r\n\r\n  useEffect(() => {\r\n    dispatch(attemptToGetMovies());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setList(movies.response);\r\n  }, [movies?.status]);\r\n\r\n  const showDetails = (details: any) => {\r\n    setShowModal(true);\r\n    setMovieDetails(details);\r\n  };\r\n\r\n  return (\r\n    <MainWrapper>\r\n      <h1>Movies</h1>\r\n      <input\r\n        type=\"text\"\r\n        name=\"search\"\r\n        placeholder=\"Type to search\"\r\n        onChange={(e) =>\r\n          setFilterText(\r\n            `${e.target.value\r\n              .charAt(0)\r\n              .toUpperCase()}${e.target.value.substring(1)}`\r\n          )\r\n        }\r\n      />\r\n      <StyledUl>\r\n        {list\r\n          ?.filter((value: any) =>\r\n            value[\"im:name\"].label.startsWith(filterText)\r\n          )\r\n          .map((info: any) => {\r\n            return (\r\n              <li onClick={() => showDetails(info)} key={info[\"im:name\"].label}>\r\n                <img src={info[\"im:image\"][0].label} alt='logo' />\r\n                <span>{info[\"im:name\"].label}</span>\r\n              </li>\r\n            );\r\n          })}\r\n      </StyledUl>\r\n      {showModal && (\r\n        <Movie movieDetails={movieDetails} setShowModal={setShowModal} />\r\n      )}\r\n    </MainWrapper>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n"],"names":["MainWrapper","styled","StyledUl","Wrapper","Content","Small","setShowModal","movieDetails","onClick","e","stopPropagation","src","label","alt","attributes","summary","rights","dispatch","useDispatch","movies","useSelector","state","useState","list","setList","filterText","setFilterText","showModal","setMovieDetails","useEffect","attemptToGetMovies","response","status","type","name","placeholder","onChange","target","value","charAt","toUpperCase","substring","filter","startsWith","map","info","details"],"sourceRoot":""}